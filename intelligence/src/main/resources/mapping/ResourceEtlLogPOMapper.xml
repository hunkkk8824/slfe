<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.selfwork.intelligence.mapper.ResourceEtlLogPOMapper" >
  <resultMap id="BaseResultMap" type="com.selfwork.intelligence.model.po.ResourceEtlLogPO" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="RESOURCE_ID" property="resourceId" jdbcType="VARCHAR" />
    <result column="CREATE_USER" property="createUser" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.selfwork.intelligence.model.po.ResourceEtlLogPO" extends="BaseResultMap" >
    <result column="LOG_CONTENT" property="logContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, RESOURCE_ID, CREATE_USER, CREATE_TIME
  </sql>
  <sql id="Blob_Column_List" >
    LOG_CONTENT
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_resource_etl_log
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByResourceId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_resource_etl_log
    where RESOURCE_ID = #{resourceId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_resource_etl_log
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.selfwork.intelligence.model.po.ResourceEtlLogPO" >
    insert into tb_resource_etl_log (ID, RESOURCE_ID, CREATE_USER, 
      CREATE_TIME, LOG_CONTENT)
    values (#{id,jdbcType=INTEGER}, #{resourceId,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{logContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.selfwork.intelligence.model.po.ResourceEtlLogPO" >
    insert into tb_resource_etl_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="resourceId != null" >
        RESOURCE_ID,
      </if>
      <if test="createUser != null" >
        CREATE_USER,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="logContent != null" >
        LOG_CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="resourceId != null" >
        #{resourceId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logContent != null" >
        #{logContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.selfwork.intelligence.model.po.ResourceEtlLogPO" >
    update tb_resource_etl_log
    <set >
      <if test="resourceId != null" >
        RESOURCE_ID = #{resourceId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logContent != null" >
        LOG_CONTENT = #{logContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.selfwork.intelligence.model.po.ResourceEtlLogPO" >
    update tb_resource_etl_log
    set RESOURCE_ID = #{resourceId,jdbcType=VARCHAR},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      LOG_CONTENT = #{logContent,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.selfwork.intelligence.model.po.ResourceEtlLogPO" >
    update tb_resource_etl_log
    set RESOURCE_ID = #{resourceId,jdbcType=VARCHAR},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>